
CREATE TABLE Position
(Position_id SERIAL PRIMARY KEY NOT NULL,
X INT NOT NULL,
Y INT NOT NULL
);

CREATE TABLE Dimension
(
    Dimension_id SERIAL PRIMARY KEY NOT NULL,
    Width Float NOT NULL,
    Height Float NOT NULL 
);

CREATE TABLE Cover
(
    Cover_id SERIAL PRIMARY KEY NOT NULL,
    CoverType VARCHAR(50) NOT NULL,
    CoverDiecutUrl VARCHAR(255) NOT NULL
);

    CREATE TABLE Diecut
    (
        Diecut_id SERIAL PRIMARY KEY NOT NULL,
        Cover_id INTEGER,
        CoverDiecutDimension INTEGER,
        FOREIGN KEY (Cover_id) REFERENCES Cover(Cover_id),
        FOREIGN KEY (CoverDiecutDimension) REFERENCES Dimension(Dimension_id)
    );

CREATE TABLE PdfSize
(
    PdfSize_id SERIAL PRIMARY KEY NOT NULL,
    PageDimension INTEGER,
    DiecutDimension INTEGER,
    FOREIGN KEY (PageDimension) REFERENCES Dimension(Dimension_id),
    FOREIGN KEY (DiecutDimension) REFERENCES Dimension(Dimension_id)
);

CREATE TABLE DiecutPositionPdf
(
    DiecutPositionPdf_id SERIAL PRIMARY KEY NOT NULL,
    Position_id INTEGER,
    FOREIGN KEY (Position_id) REFERENCES Position(Position_id)
);

CREATE TABLE Customizable
(
    Customizable_id SERIAL PRIMARY KEY NOT NULL,
    BackgroundColor BOOLEAN NOT NULL,
    Pattern BOOLEAN NOT NULL,
    Text BOOLEAN NOT NULL,
    Image BOOLEAN NOT NULL
);

CREATE TABLE SidePositionDiecut
(
    SidePositionDiecut_id SERIAL PRIMARY KEY NOT NULL,
    Position_id INTEGER NOT NULL,
    FOREIGN KEY (Position_id) REFERENCES Position(Position_id)
);

CREATE TABLE SideName
(
    SideName_id SERIAL PRIMARY KEY NOT NULL,
    Name VARCHAR(200) NOT NULL
);

CREATE TABLE SideDetails
(
    SideDetails_id SERIAL PRIMARY KEY NOT NULL,
    Dimension_id INTEGER NOT NULL,
    Customizable_id INTEGER NOT NULL,
    SidePositionDiecut_id INTEGER NOT NULL,
    SideName_id INTEGER NOT NULL,
    Icon VARCHAR(100) NOT NULL,
    Ratio float NOT NULL,
    FOREIGN KEY (Dimension_id) REFERENCES Dimension(Dimension_id),
    FOREIGN KEY (Customizable_id) REFERENCES Customizable(Customizable_id),
    FOREIGN KEY (SidePositionDiecut_id) REFERENCES SidePositionDiecut(SidePositionDiecut_id),
    FOREIGN KEY (SideName_id) REFERENCES SideName(SideName_id)
)


CREATE TABLE BookInformation
(
    BookInformation_id SERIAL PRIMARY KEY NOT NULL,
    BookName VARCHAR(50) NOT NULL,
    BookSku VARCHAR(50) NOT NULL,
    BookModel VARCHAR(50) NOT NULL
);




CREATE TABLE Book2d
(
    Book2d_id SERIAL PRIMARY KEY NOT NULL,
    BookInformation_id INTEGER NOT NULL,
    Cover_id INTEGER NOT NULL,
    Diecut_id INTEGER NOT NULL,
    PdfSize_id INTEGER NOT NULL,
    DiecutPositionPdf_id INTEGER NOT NULL,
    SideDetails_id INTEGER NOT NULL,
                Book3d_id INTEGER,
    FOREIGN KEY (Cover_id) REFERENCES Cover(Cover_id),
    FOREIGN KEY (BookInformation_id) REFERENCES BookInformation(BookInformation_id),
    FOREIGN KEY (Diecut_id) REFERENCES Diecut(Diecut_id),
    FOREIGN KEY (PdfSize_id) REFERENCES PdfSize(PdfSize_id),
    FOREIGN KEY (DiecutPositionPdf_id) REFERENCES DiecutPositionPdf(DiecutPositionPdf_id),
    FOREIGN KEY (SideDetails_id) REFERENCES SideDetails(SideDetails_id)
);

CREATE TABLE TemplateSize
(
    TemplateSizeid SERIAL PRIMARY KEY NOT NULL,
    TemplateUrl VARCHAR(200) NOT NULL,
    TemplateSize VARCHAR(100) NOT NULL
);

CREATE TABLE Template
(
    templateId SERIAL PRIMARY KEY NOT NULL,
    templateName VARCHAR(50) UNIQUE NOT NULL,
    TemplateSizeid INTEGER NOT NULL,
    Book2d_id INTEGER NOT NULL,
    FOREIGN KEY(Book2d_id) REFERENCES Book2d(Book2d_id),
    FOREIGN KEY(TemplateSizeid) REFERENCES TemplateSize(TemplateSizeid)
);



SELECT * FROM public.template left JOIN templatesize ON public.template.templatesize_id= public.templatesize.templatesize_id WHERE public.template.templatesize_id = 1